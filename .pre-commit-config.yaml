# Pre-commit hooks for code quality and consistency
# See https://pre-commit.com for more information

repos:
  # General file cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-ast
      - id: debug-statements
      - id: detect-private-key

  # Remove tabs (replace with spaces)
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: remove-tabs
        exclude: '.*\.(svg)$'

  # Ruff formatting and linting (primary tool)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      # Run the formatter first
      - id: ruff-format
        types_or: [python, pyi, jupyter]
      # Run the linter with auto-fix
      - id: ruff
        types_or: [python, pyi, jupyter]
        args: [--fix, --exit-non-zero-on-fix]

  # Type checking for main code (exclude tests)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: 
          - types-PyYAML
          - types-requests
        args: [--strict, --show-error-codes]
        exclude: ^(tests/|scripts/)

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: [bandit[toml]]
        exclude: ^tests/

  # Bash script linting
  - repo: https://opendev.org/openstack/bashate
    rev: 2.1.1
    hooks:
      - id: bashate
        args: ["--max-line-length", "150"]

  # Conventional commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict]

# Global configuration
default_stages: [commit]
fail_fast: false

# CI configuration
ci:
  autofix_commit_msg: |
    style: auto-fix pre-commit hooks
    
    ðŸ¤– Generated with pre-commit auto-fix
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: 'chore: pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
