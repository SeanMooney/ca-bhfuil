name: Build and Release

on:
  push:
    branches: [main, master]    # Build & test only
    tags: ['v*']               # Build, sign & publish
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-python-package:
    env:
      CLICOLOR: 0
      TERM: dumb
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # For sigstore signing
    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Build Python Package
        run: uv build

      - name: Run Tests
        run: |
          uv sync --dev
          uv run pytest

      - name: Run Quality Checks
        run: |
          uv run ruff check --output-format=github

      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/

      # Only sign and publish on tags
      - name: Generate Python Package SBOM
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Install syft for Python package SBOM
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

          # Generate SBOM for Python packages
          syft scan dist/ -o spdx-json=python-sbom.spdx.json

      - name: Sign and Publish Python Packages
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
          print-hash: true
          skip-existing: true

      - name: Upload Python SBOM
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: python-sbom
          path: python-sbom.spdx.json

  build-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # For OIDC signing

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Container
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          platforms: linux/amd64,linux/arm64  # Multi-architecture support
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false  # Disable provenance for faster multi-arch builds
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Ca-Bhfuil git repository analysis tool

      # Only sign and generate SBOM on tags
      - name: Install Cosign
        if: startsWith(github.ref, 'refs/tags/')
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.4.1'

      - name: Install Syft
        if: startsWith(github.ref, 'refs/tags/')
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Sign Container Image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Sign the container image using keyless signing
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}

      - name: Attest SBOM to Container
        if: startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Attach SBOM as attestation to the container
          cosign attest --yes --predicate sbom.spdx.json --type spdxjson ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}

      - name: Upload SBOM Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: container-sbom
          path: sbom.spdx.json
